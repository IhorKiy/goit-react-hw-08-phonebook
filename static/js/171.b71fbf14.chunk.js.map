{"version":3,"file":"static/js/171.b71fbf14.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.js","components/ContactForm/ContactForm.jsx","redux/selectors.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Contact_btn__JzanX\",\"text\":\"Contact_text__Wq-3f\",\"tel\":\"Contact_tel__F8aKt\"};","import { useDispatch } from 'react-redux';\nimport { MdClose } from 'react-icons/md';\nimport { deleteContact } from 'redux/operations';\nimport css from './Contact.module.css';\n\nexport const Contact = ({ text, id, tel }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <p className={css.text}>{text}</p>\n      <p className={css.tel}>{tel}</p>\n      <button className={css.btn} onClick={handleDelete}>\n        <MdClose size={16} />\n      </button>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"listItem\":\"ContactList_listItem__SptUx\"};","import { useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filters = useSelector(state => state.filter);\n\n  let filteredContact;\n\n  if (contacts) {\n    filteredContact = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filters)\n    );\n  }\n\n  return (\n    <ul className={css.list}>\n      {filteredContact.map(contact => (\n        <li className={css.listItem} key={contact.id}>\n          <Contact text={contact.name} id={contact.id} tel={contact.phone} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"h1\":\"ContactForm_h1__BSzh0\",\"form\":\"ContactForm_form__dhl+T\",\"field\":\"ContactForm_field__DAXEv\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__RBtNK\",\"isSelected\":\"Button_isSelected__-6JYv\"};","import clsx from \"clsx\";\nimport css from \"./Button.module.css\";\n\nexport const Button = ({\n  selected = false,\n  type = \"button\",\n  children,\n  ...otherProps\n}) => {\n  return (\n    <button\n      className={clsx(css.btn, {\n        [css.isSelected]: selected\n      })}\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { object, string, number } from 'yup';\nimport css from 'components/ContactForm/ContactForm.module.css';\nimport { Button } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\n\nconst initialValue = {\n  name: '',\n  tel: '',\n};\n\nlet userSchema = object({\n  name: string().min(3).required(),\n  tel: number().min(7).max(7).required(),\n});\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  \n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n        const nameExists = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === form.elements.name.value.toLowerCase()\n    );\n\n    if (nameExists) {\n      alert(`${form.elements.name.value} is already in contacts`);\n    } else {\n      dispatch(addContact(form.elements.name.value, form.elements.tel.value));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <Formik initialValues={initialValue} validationSchema={userSchema}>\n      <Form onSubmit={handleSubmit}>\n        <>\n          <h1 className={css.h1}>Phonebook</h1>\n          <div className={css.form}>\n            <p>Name</p>\n            <Field\n              className={css.field}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n            <p>Number</p>\n            <Field\n              className={css.field}\n              type=\"number\"\n              name=\"tel\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              // value={number}\n              required\n            />\n            <ErrorMessage name=\"number\" />\n            <Button type=\"submit\">Add contact</Button>\n          </div>\n        </>\n      </Form>\n    </Formik>\n  );\n}\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList.jsx';\nimport { ContactForm } from 'components/ContactForm/ContactForm.jsx';\nimport { fetchContacts } from 'redux/operations';\nimport { getIsLoading } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}"],"names":["Contact","text","id","tel","dispatch","useDispatch","className","css","onClick","deleteContact","size","ContactList","filteredContact","contacts","useSelector","state","items","filters","filter","contact","name","toLowerCase","includes","map","phone","Button","selected","type","children","otherProps","clsx","initialValue","userSchema","object","string","min","required","number","max","ContactForm","initialValues","validationSchema","onSubmit","event","preventDefault","form","target","some","elements","value","alert","addContact","reset","pattern","title","component","getIsLoading","isLoading","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}